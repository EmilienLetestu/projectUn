version: "3.1"

services:
    # HTTP Server
    nginx:
        container_name: ${CONTAINER_NAME}_nginx
        image: nginx
        ports:
            - '${NGINX_PORT}:80'
        links:
            - php-fpm
        volumes:
            - './:${WORKPATH}:rw'
            - './docker/nginx/conf/core/core.conf:/etc/nginx/conf/nginx.conf:ro'
            #- './docker/nginx/conf/development:/etc/nginx/conf.d:ro'
            - './docker/nginx/conf/production:/etc/nginx/conf.d:ro' -> Uncomment this line for production.
            - './docker/nginx/logs/:/var/log/nginx'
        restart: always

    php-fpm:
        container_name: ${CONTAINER_NAME}_php-fpm
        build: .
        environment:
          WORKPATH: '${WORKPATH}'
          BLACKFIRE_SERVER_ID: '${BLACKFIRE_SERVER_ID}'
          BLACKFIRE_SERVER_TOKEN: ${BLACKFIRE_SERVER_TOKEN}
        ports:
            - '${PHP_PORT}:9000'
        volumes:
            - './:${WORKPATH}:rw'
        restart: always

    # DB configuration
    #mysql:
        #container_name: ${CONTAINER_NAME}_mysql
        #image: mysql
        #environment:
           # MYSQL_DATABASE: ${MYSQL_DATABASE}
           # MYSQL_PASSWORD: ${MYSQL_PASSWORD}
           # MYSQL_RANDOM_ROOT_PASSWORD: ${MYSQL_RANDOM_ROOT_PASSWORD}
           # MYSQL_USER: ${MYSQL_USER}
        #ports:
           # - '${MYSQL_PORT}:3306'
        #volumes:
            #- db-data:/var/lib/mysql:rw

    postgresql:
        container_name: ${CONTAINER_NAME}_postgresql
        image: postgres:9.6 # Update to 10.0 once Doctrine is updated.
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        ports:
            - '${POSTGRES_PORT}:5432'
        volumes:
            - 'postgres_onu:/var/lib/postgresql/data:rw'
        restart: always

    # Production optimization
    redis:
        container_name: ${CONTAINER_NAME}_redis
        image: redis
        ports:
          - '${REDIS_PORT}:6379'
        links:
          - php-fpm
        restart: always

    # Testing configuration
    blackfire:
        container_name: ${CONTAINER_NAME}_blackfire
        image: blackfire/blackfire
        environment:
            BLACKFIRE_SERVER_ID: '${BLACKFIRE_SERVER_ID}'
            BLACKFIRE_SERVER_TOKEN: '${BLACKFIRE_SERVER_TOKEN}'
        links:
            - php-fpm
        volumes:
            - './:${WORKPATH}:rw'
        restart: always

volumes:
    db-data:
    postgres_onu:
